CC = gcc
CFLAGS = -Wall -Wextra -Iheader
LDFLAGS = -Llib -lgmp
BUILD_DIR = build
SRC_DIR = src
OBJ_DIR = obj
TARGET = $(BUILD_DIR)/main

SRCS = $(wildcard $(SRC_DIR)/*.c)
OBJS = $(patsubst $(SRC_DIR)/%.c, $(OBJ_DIR)/%.o, $(SRCS))

# Cible principale
$(TARGET): $(OBJS)
	@mkdir -p $(BUILD_DIR)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

# Compilation des fichiers objets
$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c | $(OBJ_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJ_DIR):
	@mkdir -p $(OBJ_DIR)

# Téléchargement, installation de GMP et remplacement des fichiers
libs:
	@echo "Vérification de l'installation de GMP..."
	@if [ ! -d "libs/gmp-6.2.0" ]; then \
		echo "GMP n'est pas installé. Installation en cours..."; \
		mkdir -p libs && cd libs && \
		curl -o gmp.tar.xz https://gmplib.org/download/gmp/gmp-6.2.0.tar.xz && \
		tar xf gmp.tar.xz && \
		cd gmp-6.2.0 && \
		./configure --prefix=$(pwd)/../gmp-local && \
		make -j$(nproc) && \
		make install; \
	else \
		echo "GMP est déjà installé."; \
	fi; \
	# Remplacer libgmp.a dans lib par la version installée
	if [ -f "libs/gmp-6.2.0/lib/libgmp.a" ]; then \
		echo "Remplacement de libgmp.a dans le répertoire lib..."; \
		cp libs/gmp-local/lib/libgmp.a lib/; \
	fi; \
	# Remplacer gmp.h dans le répertoire header
	if [ -f "libs/gmp-6.2.0/include/gmp.h" ]; then \
		echo "Remplacement de gmp.h dans le répertoire header..."; \
		cp libs/gmp-local/include/gmp.h header/; \
	fi

# Nettoyage des fichiers générés
clean:
	rm -rf $(BUILD_DIR) $(OBJ_DIR) libs/gmp-local lib/libgmp.a header/gmp.h

.PHONY: clean all libs